# Generated by Django 4.2.3 on 2023-07-11 12:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('country', models.CharField(max_length=50, verbose_name='Страна')),
                ('city', models.CharField(max_length=50, verbose_name='Город')),
                ('street', models.CharField(max_length=50, verbose_name='Улица')),
                ('number', models.CharField(max_length=10, verbose_name='Номер дома')),
            ],
        ),
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Время создания')),
                ('debt', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Задолженность')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network.contact', verbose_name='Контакты')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('model', models.CharField(max_length=50, verbose_name='Модель')),
                ('release_date', models.DateField(auto_now_add=True, verbose_name='Дата выхода на рынок')),
            ],
        ),
        migrations.CreateModel(
            name='RetailNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Время создания')),
                ('debt', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Задолженность')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network.contact', verbose_name='Контакты')),
                ('product', models.ManyToManyField(to='network.product', verbose_name='Продукты')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network.factory', verbose_name='Поставщик')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndividualEntrepreneur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Время создания')),
                ('debt', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Задолженность')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network.contact', verbose_name='Контакты')),
                ('product', models.ManyToManyField(to='network.product', verbose_name='Продукты')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network.retailnetwork', verbose_name='Поставщик')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='factory',
            name='product',
            field=models.ManyToManyField(to='network.product', verbose_name='Продукты'),
        ),
    ]
